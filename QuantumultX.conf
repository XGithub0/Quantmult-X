// @ConfigName        配置修改自墨鱼自用的 QX 配置文件
// @备注说明           模块前说明选自 https://github.com/fmz200/wool_scripts/blob/main/QuantumultX/config/QuanX.conf, https://github.com/KOP-XIAO/QuantumultX/blob/master/QuantumultX_Profiles.conf
// 更多说明，参看       https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Inbound.conf
// @UpdateTime        2024-05-09 （本文档修改时间）
// @UpdateTime        2024/05/03 20:23UTC/GMT +8 （参考版本修改时间）
// @ConfigURL         https://github.com/XGithub0/Quantumult-X/raw/main/QuantumultX.conf
// @downloadURL       https://raw.githubusercontent.com/XGithub0/Quantumult-X/main/QuantumultX.conf


// Line started with ";" or "#" or "//" shall be comments.
// 以 ";" 或 "#" 或 "//" 开头的行为注释行。


// ==UserScript==
// @ConfigName        修改自墨鱼自用的QX配置文件
// @Author            @ddgksf2013
// @TgChannel         𝐡𝐭𝐭𝐩𝐬://𝐭.𝐦𝐞/𝐝𝐝𝐠𝐤𝐬𝐟𝟐𝟎𝟐𝟏
// @WechatID          公众号墨鱼手记
// @UpdateTime        ---
// @Function          请参考对应的注释或Tag
// @Appreciate        https://shrtm.nu/hGk2
// @MainFunction      去开屏广告、应用净化、超级VIP、智能分流、自动优选、图标订阅、流媒体查询、Boxjs订阅、网易云解灰色Music、IOS更新屏蔽
// @ExpressThanks     @ddgksf2013,@Nick-workflow,@KOP-XIAO,@DivineEngine,@blackmatrix7,@Orz-3,@yjqiang,@O7Y0,@Peng-YM,@Neurogram-R,@id77,@NobyDa,@17mon
// @ConfigVersion     ---
// @ConfigURL         https://github.com/ddgksf2013/Profile/raw/master/QuantumultX.conf
// ==/UserScript==
# 𝐂𝐮𝐭𝐭𝐥𝐞𝐟𝐢𝐬𝐡 𝐒𝐞𝐥𝐟-𝐮𝐬𝐞 𝐂𝐨𝐧𝐟𝐢𝐠𝐮𝐫𝐚𝐭𝐢𝐨𝐧 𝐂𝐡𝐚𝐧𝐠𝐞𝐥𝐨𝐠 𝐂𝐫𝐞𝐚𝐭𝐞𝐝 𝐛𝐲 𝐝𝐝𝐠𝐤𝐬𝐟𝟐𝟎𝟏𝟑
# 每次具体更新内容列表，详见https://raw.githubusercontent.com/ddgksf2013/Profile/master/QuantumultX.conf


# 🟢 > 建议在「其他设置」里「GeoLite2」的「来源」填写使用下面链接「任选一个」，并开启「自动更新」
; https://github.com/Loyalsoldier/geoip,每周四自动生成 GeoIP 文件
; https://raw.githubusercontent.com/Loyalsoldier/geoip/release/Country.mmdb
; 建议选用下面一个
; https://github.com/Hackl0us/GeoIP2-CN,每隔 3 天通过全自动化部署自动更新
; https://github.com/Hackl0us/GeoIP2-CN/raw/release/Country.mmdb


# 🟢 > QuantumultX @ddgksf2013 设置推荐
; 「通知」栏中，建议仅开启[策略检测通知]和[脚本通知]开关
; 「VPN」栏中，建议关闭[兼容性增强]、[分流匹配优化]和[MPM]开关


# > 解锁网易云灰色音乐，获取证书链接 
; https://raw.githubusercontent.com/nondanee/UnblockNeteaseMusic/master/ca.crt
# > 具体操作步骤可参考下面这篇《利用QuantumultX解锁网易云付费及非版权音乐》文章
; https://mp.weixin.qq.com/s/ca6U1O2FTfcqzL7TnJ04IQ


# > QuantumultX图标库订阅，打开以下URL，手机端点击图片即可快捷添加「1.0.30+」
; https://github.com/ddgksf2013/Icon/blob/master/README.md


# 策略组 图标订阅地址
;https://raw.githubusercontent.com/Koolson/Qure/master/Other/QureColor.json


# > 推荐使用的旧版应用如下链接所示
; https://docs.google.com/spreadsheets/d/1HDDSd5uadmqyd0UuBsIJltuRzLdME0P6LuaWPbURgWM/edit#gid=1046766772
# > 利用描述文件屏蔽IOS更新提醒（兼容IOS13、14、15、16、17）
# > 去「设置-通用-日期与时间-自动设置」，将日期改为2023年12月14日之前再打开下面链接，安装成功后重启恢复时间设置
; https://static.itsnebula.net/apple/noota/17.mobileconfig


# 🟢 墨鱼提醒以上全部内容[包括本行]可自行在配置中删除，对使用并无影响



#############################################
# 配置作用：本配置为全局配置文件，内含去广告，应用分流，策略组，定时脚本等
# 重要提示：导入本文件会覆盖原本所有配置，不是初次配置QuanX请谨慎使用
# 注意事项: 以下内容中，带“;” “#” “//” 开头的行都是注释，去掉注释符号该行才有效
# 配置教程：https://github.com/fmz200/wool_scripts/blob/main/QuantumultX/How-To-Use.md
# 懒人配置：点击QX右下角风车拉下到底-下载配置-生成证书-配置证书-信任证书-开启QX即可愉快的使用了
# 交流群组：https://t.me/lanjieguanggao
#############################################



# =====================================
# 🟢 general 模块内为一些通用的设置参数项
# =====================================
[general]

# > 用于节点延迟测试
server_check_url= http://www.gstatic.com/generate_204
# > 服务器测试超时时间 (毫秒)
server_check_timeout = 3000
# > 用于设置图标显示
profile_img_url=https://github.githubassets.com/images/modules/site/integrators/google.png
# > 用于Check节点IP地址(以下geo_location_checker任选一个即可)
geo_location_checker=disabled
;geo_location_checker=http://ip-api.com/json/?lang=zh-CN, https://raw.githubusercontent.com/KOP-XIAO/QuantumultX/master/Scripts/IP_API.js
# > 功能强大的解析器，用于引用资源的转换
resource_parser_url=https://raw.githubusercontent.com/KOP-XIAO/QuantumultX/master/Scripts/resource-parser.js
# > 下列路径将不经过QuanX的处理
excluded_routes=239.255.255.250/32, 24.105.30.129/32, 185.60.112.157/32, 185.60.112.158/32, 182.162.132.1/32
udp_whitelist=1-442, 444-65535
# > 第一个filter为4g模式开启规则分流，第二个filter为其他wifi下开启规则分流，第三个wifi1修改成你路由器翻墙的wifi名开启直连模式，第四个wifi2为你公司或者其他有路由器翻墙的WiFi名走直连）
# > 默认关闭根据wifi切换模式，如需开启，删除下方的"#"即可
#running_mode_trigger=filter, filter, wifi1:all_direct, wifi2: all_direct
# > dns_exclusion_list
dns_exclusion_list=*.cmpassport.com, *.jegotrip.com.cn, *.icitymobile.mobi, id6.me, *.pingan.com.cn, *.cmbchina.com

# 
;fallback_udp_policy=direct
# UDP Drop名单：同白名单类似，但不会返回 ICMP “端口不可达” 信息，名单仅处理 whitelist名单中的端口
udp_drop_list=443


# Quantumult 使用 HEAD 方法将 HTTP 请求发送到服务器检查 url 来测试代理的状态，结果应该是两个延迟，第一个是 TCP 与代理服务器的握手，第二个是 Quantumult 成功地从服务器检查 url 接收 HTTP 响应的总时间。闪电图标表示 TCP Fast Open 成功。如果 [server_local] 或 [server_remote] 中的服务器有自己的 server_check_url，则会用自己的 server_check_url 代替 [general] 中的 server_check_url。
# Quantumult 使用 HTTP HEAD 方法对测试网址 server_check_url 进行网页响应性测试(测试结果为通过该节点访问此网页获得 HTTP 响应所需要的时间)，来确认节点的可用性。
# Quantumult 界面中的延迟测试方式均为网页响应性测试，显示的最终延迟均为通过对应节点访问测试网页获得 HTTP 响应所需要时间。
# 由于 Trojan 协议为无响应校验协议，使得 HTTP 检测方式即使获得了 HTTP 响应，也不代表节点一定可用。
# server_check_url=http://www.gstatic.com/generate_204



# =====================================
# 🟢 [task_local] 任务模块，可用于签到，节点流媒体检测等
# =====================================
[task_local]


#
# $task.fetch() 组成一个 HTTP 请求并处理响应，只支持 text body。如果您想要 serial requests 而不是 current requests，可以将 $task.fetch() 嵌入到另一个 $task.fetch() 的完成处理程序中。
# 脚本应保存在本地「我的 iPhone - Quantumult X - Scripts」或「iCloud Drive - Quantumult X - Scripts」中。示例：https://github.com/crossutility/Quantumult-X/blob/master/sample-task.js
# 默认的 HTTP 请求超时是 10 秒。
# 支持 5 或 6 个 cron 字段，不包括命令字段。
#
#CRON 表达式是一个字符串，以 5 或 6 个空格隔开，分为 6 或 7 个域，每一个域代表一个含义。但在几大代理软件的具体实现中，CRON 表达式是 5 和 6 个域（没有 “年”），有如下两种语法格式：
# Quantumult X 兼容 5 或 6 位  
# 五位：[分] [时] [日] [月] [周] 
#实例：0 9 * * * 表示每天 9 点 0 分执行一次
# 六位：[秒] [分] [时] [日] [月] [周] 
#实例：30 0 9 * * * 表示每天 9 点 0 分 30 秒执行一次

# > 请手动添加下面的订阅（流媒体Task订阅集合）
; https://raw.githubusercontent.com/KOP-XIAO/QuantumultX/master/Scripts/UI-Action.json
# > 流媒体解锁查询
event-interaction https://raw.githubusercontent.com/KOP-XIAO/QuantumultX/master/Scripts/streaming-ui-check.js, tag=流媒体解锁查询, img-url=arrowtriangle.right.square.system, enabled=true
# > 判断当前节点是不是住宅IP
;event-interaction https://raw.githubusercontent.com/fmz200/wool_scripts/main/QuantumultX/scripts/server_info.js, tag=节点详情查询, img-url=https://raw.githubusercontent.com/fmz200/wool_scripts/main/icons/apps/ipInfo.png, enabled=true



# =====================================
# 🟢 [rewrite_local] 本地重写
# =====================================
[rewrite_local]

# ======= 油管视频广告请求 ======= #
^https?:\/\/[\w-]+\.googlevideo\.com\/(?!(dclk_video_ads|videoplayback\?)).+&oad url reject
(^https?:\/\/[\w-]+\.googlevideo\.com\/(?!dclk_video_ads).+?)&ctier=L(&.+?),ctier,(.+) url 302 $1$2$3

# --------------------------------------
# 方法来自「墨鱼自用的小火箭配置文件」 https://github.com/ddgksf2013/Profile/raw/master/Shadowrocket.conf
# 格式转换 自Shadowrocket → 配置文件 → [URL Rewrite]
# ======= 油管视频广告请求 ======= #
# (^https?:\/\/[\w-]+\.googlevideo\.com\/(?!dclk_video_ads).+?)&ctier=L(&.+?),ctier,(.+) $1$2$3 302 
# ^https?:\/\/[\w-]+\.googlevideo\.com\/(?!(dclk_video_ads|videoplayback\?)).+&oad - reject
# ======= 需要手动添加模块 ====== #
# > Youtube去广告及功能增强 https://github.com/Maasea/sgmodule/raw/master/YouTube.Enhance.sgmodule
# Quantumult X 导入 Sruge 模块，如果你的 Quantumult X 已安装解析器（general 中 KOP-XIAO 的解析器），可以直接引用上述 Surge 的模块；复制上述链接 ， 进入QX - 重写 - 引用 - 粘贴 ，并开启解析器按钮；
# --------------------------------------



# =====================================
# 🟢 [rewrite_remote] 远程复写模块：包含主机名hostname以及复写rewrite规则
# update-interval 为更新时间参数，单位 秒, 默认更新时间为 24*60*60=86400 秒，也就是24小时.
# opt-parser=true/false 用于控制是否对本订阅 开启资源解析器，不写或者 false 表示不启用解析器#
# 支持本地/iCloud的复写规则文件，位于Quantumult X/Profiles路径下
# 参考写法：rewrite.txt, tag=本地复写, opt-parser=false, enabled=false
# 怎么添加和使用重写：How to add and use rewrite,https://github.com/fmz200/wool_scripts/blob/main/QuantumultX/rewrite/00-How-To-Use-Rewrite.md
# 打开quanX的设置页面或者配置文件你能看到重写主要有两个地方可以配置： [rewrite_remote] 以及 [rewrite_local]。
# 他们的区别是什么？
# ⒈ 远程复写[rewrite_remote]：配置都是别人写好的，包含主机名 hostname 以及复写 rewrite 规则，拿来即用；本地复写[rewrite_local]：只有复写 rewrite 规则，hostname 需要自行在 [hostname] 模块再添加，相当于把[rewrite_remote]文件中的配置复制出来自行配置。
# ⒉ 对于同一条规则，[rewrite_local]优先于[rewrite_remote]生效，意思就是[rewrite_remote]的配置是多余的不会生效。
# ⒊ 对于同一条规则，任选一种配置即可，推荐[rewrite_remote]。
# =====================================
[rewrite_remote]
https://raw.githubusercontent.com/XGithub0/Quantumult-X/main/Youtube%20(Music)%20Enhance.YouTube.sgmodule, tag=@油管去广告@Maasea-Fix, update-interval=172800, opt-parser=true, enabled=true


# ======= 会员解锁 ======= #
https://github.com/ddgksf2013/Rewrite/raw/master/AdBlock/Bilibili.conf, tag=哔哩哔哩广告净化@ddgksf2013, update-interval=86400, opt-parser=false, enabled=true
https://github.com/ddgksf2013/Rewrite/raw/master/UnlockVip/Spotify.conf, tag=Spotify音乐VIP[音质≤高]@app2smile, update-interval=86400, opt-parser=false, enabled=true
https://github.com/ddgksf2013/dev/raw/master/ForOwnUse.conf, tag=墨鱼专属VIP@ddgksf2013, update-interval=86400, opt-parser=false, enabled=true


# ======= 广告净化 ======= #
https://raw.githubusercontent.com/Maasea/sgmodule/master/YouTube.Enhance.sgmodule, tag=油管去广告@Maasea, update-interval=172800, opt-parser=true, enabled=false
#https://github.com/ddgksf2013/Rewrite/raw/master/AdBlock/StartUp.conf, tag=墨鱼去开屏2.0@ddgksf2013, update-interval=86400, opt-parser=false, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/script/zheye/zheye.snippet, tag=知乎去广告及体验增强@blackmatrix7, update-interval=86400, opt-parser=false, enabled=true
#https://github.com/app2smile/rules/raw/master/module/tieba-qx.conf, tag=百度贴吧去广告@app2smile, update-interval=86400, opt-parser=false, enabled=false
https://github.com/ddgksf2013/Rewrite/raw/master/AdBlock/Applet.conf, tag=微信小程序去广告@ddgksf2013, update-interval=86400, opt-parser=false, enabled=true
# 暂时失效 https://github.com/ddgksf2013/Rewrite/raw/master/AdBlock/YoutubeAds.conf, tag=油管去广告@Maasea, update-interval=86400, opt-parser=false, enabled=true
https://github.com/ddgksf2013/Rewrite/raw/master/AdBlock/Weibo.conf, tag=微博去广告@ddgksf2013, update-interval=86400, opt-parser=false, enabled=true
https://github.com/ddgksf2013/Rewrite/raw/master/AdBlock/Ximalaya.conf, tag=喜马拉雅去广告[卸载重装]@ddgksf2013, update-interval=86400, opt-parser=false, enabled=true
https://github.com/ddgksf2013/Rewrite/raw/master/AdBlock/Amap.conf, tag=高德地图净化[卸载重装]@ddgksf2013, update-interval=86400, opt-parser=false, enabled=true
https://github.com/ddgksf2013/Rewrite/raw/master/AdBlock/Netease.conf, tag=网易云音乐去广告[卸载重装]@ddgksf2013, update-interval=86400, opt-parser=false, enabled=false
https://gist.githubusercontent.com/ddgksf2013/beec132ca0c3570ffa0cf331bce8f82a/raw/baidumap.adblock.conf, tag=百度地图净化[卸载重装]@ddgksf2013, update-interval=86400, opt-parser=false, enabled=true


# ======= 网页优化 ======= #
https://github.com/ddgksf2013/Rewrite/raw/master/Html/WebAdBlock.conf, tag=影视网站去广告@ddgksf2013, update-interval=86400, opt-parser=false, enabled=true
#https://github.com/ddgksf2013/Rewrite/raw/master/Html/Q-Search.conf, tag=Safari超级搜索@ddgksf2013, update-interval=86400, opt-parser=false, enabled=true
https://github.com/ddgksf2013/Rewrite/raw/master/Html/Douban.conf, tag=豆瓣网页观影快捷跳转@ddgksf2013, update-interval=86400, opt-parser=false, enabled=true
https://raw.githubusercontent.com/ddgksf2013/Rewrite/master/Html/General.conf, tag=神机重定向@DivineEngine, update-interval=86400, opt-parser=false, enabled=true


# ======= 功能增强 ======= #
#https://github.com/ddgksf2013/Rewrite/raw/master/AdBlock/XiaoHongShu.conf, tag=小红书净化+去水印@ddgksf2013, update-interval=86400, opt-parser=false, enabled=true
#https://gist.githubusercontent.com/ddgksf2013/f43026707830c7818ee3ba624e383c8d/raw/baiduCloud.vip.js, tag=百度网盘净化+倍速@ddgksf2013, update-interval=86400, opt-parser=true, enabled=true
https://raw.githubusercontent.com/ddgksf2013/Rewrite/master/Function/UnblockURLinWeChat.conf, tag=微信解锁被屏蔽的URL@zZPiglet, update-interval=86400, opt-parser=false, enabled=true


# ======= 自行启用 ======= #
https://raw.githubusercontent.com/Orz-3/QuantumultX/master/Netflix_ratings.conf, tag=Netflix评分@Orz-3, update-interval=86400, opt-parser=false, enabled=true
https://raw.githubusercontent.com/id77/QuantumultX/master/rewrite/Youtube_CC.conf#out=Hant, tag=油管字幕翻译@id77, update-interval=86400, opt-parser=false, enabled=false
https://raw.githubusercontent.com/chavyleung/scripts/master/box/rewrite/boxjs.rewrite.quanx.conf, tag=BoxJS商店版@chavyleung, update-interval=86400, opt-parser=true, enabled=false


#
# 参数「tag」、「force-policy」和「enabled」是可选的。
# 当有强制策略时，远程资源的过滤器中的策略将被忽略，并使用强制策略。
#



# =====================================
# 🟢 [server_local] 本地服务器部分
# =====================================
[server_local]



# =====================================
# 🟢 [server_remote] 远程订阅部分
# =====================================
[server_remote]


https://import.suya.io/?api=78453&key=bba48e8c0058&app=quantumultx, tag=Suya, update-interval=172800, opt-parser=true, enabled=true
https://host.ssrbox.com/api/v1/client/subscribe?token=f082ce071cc1b6c6beb5fdee9d060428, tag=Ssbox, update-interval=172800, opt-parser=false, enabled=false

#
# 参数「tag」和「enabled」是可选的。
# 各种远程资源的默认同步时间间隔是 86400 秒。
# 你可以设置 update-interval=172800 来自定义你的自动同步时间间隔(秒)，负数表示禁用自动同步。
#
# > 为避免网易云解锁节点滥用，有需求的请去「墨鱼手记」公众号回复「网易云」获取


# > 魔法仅供临时使用1 由胖虎@gitbigg提供
;https://raw.githubusercontent.com/gitbigg/dy/main/jd#delreg=.*&rename=@tg%40ddgksf2021-+@num-$index7, tag=🐟临时使用, update-interval=3600, opt-parser=true, enabled=true
# > 魔法仅供临时使用2
;https://sub.sharecentre.online/sub#delreg=.*&rename=@tg%40ddgksf2021-+@num-$index7, tag=🐟临时使用, update-interval=3600, opt-parser=true, enabled=true




# =====================================
# 🟢 [dns]域名系统（英文：Domain Name System，缩写：DNS）是互联网的一项服务。它作为将域名和IP地址相互映射的一个分布式数据库，能够使人更方便地访问互联网。
# =====================================
[dns]

;prefer-doh3
;doh-server = https://223.5.5.5/dns-query, https://223.6.6.6/dns-query
# > QuantumultX开启IPV6方法，删去下面的「no-ipv6」，在「VPN」栏中，开启「兼容性增强」
no-ipv6
no-system


# DOH
#EasyMosdns doh-server=https://doh.apad.pro/dns-query 建议用在解析海外网站时用
# 腾讯 阿里
doh-server=https://1.12.12.12/dns-query, https://120.53.53.53/dns-query, https://223.5.5.5/dns-query, https://223.6.6.6/dns-query


# tls
# 腾讯
server=1.12.12.12
server=120.53.53.53


# 原配置
#server=223.5.5.5
#server=119.29.29.29
#server=114.114.114.114
#server=/*.icloud.com/119.29.29.29
#server=/*.icloud.com.cn/119.29.29.29
#server=/*.tencent.com/119.29.29.29
#server=/*.weixin.com/119.29.29.29


server=/*.raw.githubusercontent.com/8.8.8.8

server=/*.tencent.com/119.29.29.29
server=/*.weixin.com/119.29.29.29


# 按照下面的说明，配备了 doh server= 会失效，但是如果不配置一句会造成节点测试结果显示的两个 tcp 值显示为「× ×」，测试版本 1.5.0-830
server=223.5.5.5

;如指定 doh 服务，则👆️上面的一般 dns 解析均失效（当 DoH 服务器被设置时，所有其他普通的（没有与之相关的特定域）服务器将被忽略。） 额外参数，在特定网络下禁用该 doh
;doh-server=xxx.com, excluded_ssids=SSID1, SSID2
; 1.0.29 版本后支持多个 doh 并发，👇
;doh-server=xx1.com,xx2.com,excluded_ssids=SSID1, SSID2
; 1.0.29 版本后支持 alias 映射类型
;alias=/example.com/another-example.com

;如指定了 DoQ 服务，则 DoH 以及其它 dns解析均失效
;doq-server = quic://dns.adguard.com
;doq-server = quic://dns1.example.com, quic://dns2.example.com
;doq-server = quic://dns.adguard.com, excluded_ssids=SSID1
;doq-server = quic://dns.adguard.com, included_ssids=SSID2
;指定域名解析dns, 下面为示范，按需启用, 同样支持 excluded_ssids/included_ssids 参数
;server=/*.taobao.com/223.5.5.5, excluded_ssids=My-Wifi, Your-Wifi
;server=/*.tmall.com/223.5.5.5, included_ssids=His-Wifi
;server=/example1.com/8.8.4.4
;server=/*.example2.com/223.5.5.5
;server=/example4.com/[2001:4860:4860::8888]:53
;address=/example5.com/192.168.16.18
;address=/example6.com/[2001:8d3:8d3:8d3:8d3:8d3:8d3:8d3]
//映射域名到其它域名的类型
;alias = /example7.com/another-example.com



# =====================================
# 🟢 [policy] 策略组
# static：你需要手动选择想要的节点/策略组。
# available：将按顺序选择你列表中第一个可用的节点。
# round-robin：将按列表的顺序轮流使用其中的节点。
# url-latency-benchmark：选取延迟最优节点。
# dest-hash：随机负载均衡，但相同域名走固定节点。
# ssid：将根据你所设定的网络来自动切换节点/策略组。
# =====================================
[policy]

;static=网易云音乐, direct, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Netease_Music_Unlock.png
static=全球加速, 自动选择, direct, 香港节点, 台湾节点, 日本节点, 狮城节点, 美国节点, proxy, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/Global.png
static=苹果服务, direct, 香港节点, 台湾节点, 美国节点, 日本节点, 狮城节点, proxy, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Apple.png
static=哔哩哔哩, direct, 香港节点, 台湾节点, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/bilibili.png
static=国际媒体, 自动选择, 台湾节点, direct, 香港节点, 日本节点, 美国节点, 狮城节点, proxy, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/Streaming.png
static=兜底分流, 自动选择, 全球加速, direct, 香港节点, 台湾节点, 日本节点, 狮城节点, 美国节点, proxy, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/Final.png

#默认设置15分钟测速一次，可自行修改check-interval=后面的数值（单位：秒），tolerance=后面的数值不建议修改
#将下面的url-latency-benchmark的内容替换成static，并删除[check-interval=900, tolerance=0, ]即可手动选择节点
url-latency-benchmark=自动选择, server-tag-regex=^(.(?!(网易|墨鱼)))*$, check-interval=900, tolerance=0, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Auto.png
url-latency-benchmark=香港节点, server-tag-regex=(?=.*(港|HK|(?i)Hong))^((?!(台|日|韩|新|美)).)*$, check-interval=900, tolerance=0, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/HK.png
url-latency-benchmark=台湾节点, server-tag-regex=(?=.*(台|TW|(?i)Taiwan))^((?!(港|日|韩|新|美)).)*$, check-interval=900, tolerance=0, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/TW.png
url-latency-benchmark=日本节点, server-tag-regex=(?=.*(日|JP|(?i)Japan))^((?!(港|台|韩|新|美)).)*$, check-interval=900, tolerance=0, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/JP.png
url-latency-benchmark=狮城节点, server-tag-regex=(?=.*(新|狮|獅|SG|(?i)Singapore))^((?!(港|台|日|韩|美)).)*$, check-interval=900, tolerance=0, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/SG.png
url-latency-benchmark=美国节点, server-tag-regex=(?=.*(美|US|(?i)States|American))^((?!(港|台|日|韩|新)).)*$, check-interval=900, tolerance=0, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/US.png



# =====================================
# 🟢 [filter_remote] 远程订阅的分流，以及本地的配置片段
# =====================================
[filter_remote]

https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/Speedtest/Speedtest.list, tag=Speedtest, force-policy=direct, update-interval=172800, opt-parser=false, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/GoogleSearch/GoogleSearch.list, tag=GoogleSearch, force-policy=香港节点, update-interval=172800, opt-parser=true, enabled=true

#https://github.com/ddgksf2013/Filter/raw/master/NeteaseMusic.list, tag=解锁网易云音乐, force-policy=网易云音乐, update-interval=172800, opt-parser=false, enabled=false
https://raw.githubusercontent.com/ddgksf2013/Filter/master/Unbreak.list, tag=规则修正, force-policy=direct, update-interval=172800, opt-parser=true, enabled=true
https://raw.githubusercontent.com/Cats-Team/AdRules/main/qx.conf, tag=广告终结者, force-policy=reject, update-interval=172800, opt-parser=true, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/WeChat/WeChat.list, tag=微信直连, force-policy=direct, update-interval=172800, opt-parser=false, enabled=true

https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/TikTok/TikTok.list, tag=海外抖音, force-policy=全球加速, update-interval=172800, opt-parser=true, enabled=true
https://raw.githubusercontent.com/ddgksf2013/Filter/master/GoogleVoice.list, tag=Google Voice, force-policy=美国节点, update-interval=172800, opt-parser=true, enabled=true
https://github.com/blackmatrix7/ios_rule_script/raw/master/rule/QuantumultX/OpenAI/OpenAI.list, tag=OpenAi, force-policy=狮城节点, update-interval=172800, opt-parser=true, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/Telegram/Telegram.list,tag=Telegram, force-policy=狮城节点, update-interval=172800, opt-parser=true, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/PayPal/PayPal.list,tag=PayPal, force-policy=美国节点, update-interval=172800, opt-parser=true, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/Spotify/Spotify.list, tag=Spotify音乐, force-policy=美国节点, update-interval=172800, opt-parser=true, enabled=true
https://raw.githubusercontent.com/ddgksf2013/Filter/master/Streaming.list, tag=国际媒体, force-policy=国际媒体, update-interval=172800, opt-parser=true, enabled=true
https://raw.githubusercontent.com/ddgksf2013/Filter/master/StreamingSE.list, tag=哔哩哔哩, force-policy=哔哩哔哩, update-interval=172800, opt-parser=true, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/Apple/Apple.list, tag=苹果服务, force-policy=苹果服务, update-interval=172800, opt-parser=true, enabled=true
https://raw.githubusercontent.com/VirgilClyne/GetSomeFries/main/ruleset/ASN.China.list, tag=国内网站, force-policy=direct, update-interval=172800, opt-parser=true, enabled=true



# =====================================
# 🟢 [filter_local] 本地分流规则：对于完全相同的某条规则，本地的将优先于远程生效
# =====================================
[filter_local]

# > 一些比较容易忽视的分流
host, ad.12306.cn, direct
host, gg.caixin.com, direct
host, sdkapp.uve.weibo.com, direct
host-suffix, ucweb.com, direct
host-suffix, kuwo.cn, direct
host, ntb.lanjie100.com, reject

# > 贴吧屏蔽域名dns查询
ip-cidr, 180.76.76.200/32, reject

# > local
ip-cidr, 10.0.0.0/8, direct
ip-cidr, 127.0.0.0/8, direct
ip-cidr, 172.16.0.0/12, direct
ip-cidr, 192.168.0.0/16, direct
ip-cidr, 224.0.0.0/24, direct
ip-cidr, 182.254.116.0/24, direct
geoip, cn, direct
final, 兜底分流



# =====================================
# 🟢 [http_backend] 部署一个本地 HTTP 服务器，并使用 JavaScript 进行数据处理
# =====================================
[http_backend]
# 部署一个本地 HTTP 服务器，并使用 JavaScript 进行数据处理。
# 输入变量为：$reqeust.url、$reqeust.path、$reqeust.headers、$reqeust.body。
# 使用 $done 输出像 $done({status:"HTTP/1.1 200 OK"}, headers:{}, body:"here is a string") 这样的返回响应。
# 此外，您还可以使用签名或任何其他验证方法来验证请求是否合法。
# 部署后您应该通过 http://127.0.0.1:9999/your-path/your-api/. 进行访问。服务器默认监听端口为 9999，您可以在UI中进行更改。
#
# [http_backend] 完整示例请查看「示例」
# > Boxjs设置，改为使用http backend方式，访问地址改为http://127.0.0.1:9999，更新配置后请长按风车-更新，然后重启代理
# > BoxJs相关教程参考 https://docs.boxjs.app/
# BoxJS已不需要此配置
;https://raw.githubusercontent.com/chavyleung/scripts/master/chavy.box.js, host=boxjs.com, tag=BoxJS, path=^/, enabled=false



# =====================================
# 🟢 MITM：中间人攻击，解密/跳过相关域名的内容，"-"开头为跳过
# =====================================
[mitm]
#
# 只有「hostname」中的 TLS SNI 或目标地址将被 MitM 处理。
# 默认情况下，当为 HTTPS 请求启用 MitM 时，Quantumult X 会从原站点获取证书（证书会被缓存），保留大部分需要的原始证书信息，并使用 MitM 的 root CA 重新签名，这是推荐的（也是比较兼容的）MitM 证书创建方式。
# 偶尔有些用户喜欢调试 HTTPS 请求，其域名不存在，所以原证书根本不存在。当参数 simple_cert_hostname 出现的时候。其 TLS SNI 名称在 simple_cert_hostname(及 hostname) 中的 HTTPS 请求将使用纯本地生成的 MitM 证书。
# 注意！！！您应该始终保护您的 CA 密码和 p12 的私密性。
#
;passphrase =
;p12 =
;skip_validating_cert = true
;force_sni_domain_name = false
;simple_cert_hostname = non-existed-domain.com, *.non-connected-domain.com
;hostname = *.googlevideo.com
# --------------------

skip_validating_cert = true
force_sni_domain_name = false

# 本地主机名
hostname = -*.apple.com, -consumer.fcbox.com, -*huami.com, -weather-data.apple.com, -*amemv.com, -*snssdk.com, -www.google.com

# 证书
;passphrase =
;p12 =




# 🟢 墨鱼提醒passphrase和p12代为证书&主机名部分, 更新配置前可把旧的配置中passphrase和p12代码拷贝下来, 导入新的配置文件把内容粘贴在对应位置就不用重装证书

